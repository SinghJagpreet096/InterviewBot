PYTHON_VERSION=3.10.12
VENV_NAME=.venv
PYTHON=$(VENV_NAME)/bin/python
PIP=$(VENV_NAME)/bin/pip
MODEL=llama3.2:1b
APP=app.py

.PHONY: help pyenv setup venv install install-ollama ollama pull run clean

help:
	@echo "Available commands:"
	@echo "  make setup          	- Setup Virtual Environment and install dependencies"
	@echo "  make setup-ollama   	- Install Ollama and pull model"
	@echo "  make run-app        	- Run Streamlit app"
	@echo "  make stop-app       	- Stop only Streamlit app"
	@echo "  make clean          	- Remove virtual environment and stop all services"


setup:
	@echo "📦 Installing pyenv (if missing)..."
	@which pyenv >/dev/null 2>&1 || (curl https://pyenv.run | bash && exec $$SHELL)
	@echo "📦 Installing pyenv-virtualenv (if missing)..."
	@pyenv virtualenvs >/dev/null 2>&1 || brew install pyenv-virtualenv || true
	@echo "📦 Installing Python $(PYTHON_VERSION) via pyenv..."
	pyenv install -s $(PYTHON_VERSION)
	@echo "🔧 Creating virtual environment $(VENV_NAME)..."
	pyenv virtualenv $(PYTHON_VERSION) $(VENV_NAME)
	pyenv local $(VENV_NAME)
	@echo "✅ Done. Run: pyenv activate $(VENV_NAME)"

install:
	@echo "📦 Installing dependencies into venv..."
	$(PIP) install --upgrade pip
	$(PIP) install -r requirements.txt

setup-ollama:
	@echo "🧠 Checking for Ollama..."
	@which ollama >/dev/null 2>&1 || ( \
		echo "📥 Ollama not found. Installing..." && \
		( \
			[ "$$(uname)" = "Darwin" ] && curl -fsSL https://ollama.com/install.sh | sh || \
			[ "$$(uname)" = "Linux" ] && curl -fsSL https://ollama.com/install.sh | sh \
		) \
	)
	@echo "🧠 Starting Ollama in background..."
	pkill -f "ollama serve" || true
	nohup ollama serve > ollama.log 2>&1 &
	@echo "⬇️ Pulling model: $(MODEL)"
	ollama pull $(MODEL)

run-app:
	@echo "🚀 Launching InterviewBot..."
	streamlit run $(APP)

stop-app:
	@echo "🛑 Stopping Streamlit app..."
	pkill -f "streamlit run" || true
	@echo "🛑 Stopping Ollama service..."
	pkill -f "ollama serve" || true
clean:
	@echo "🧹 Cleaning up..."
	@echo "🛑 Stopping Ollama service..."
	-pkill -f "ollama serve" || true
	@echo "🛑 Stopping Streamlit app..."
	-pkill -f "streamlit run" || true
	@echo "🧹 Removing pyenv virtualenv $(VENV_NAME)..."
	pyenv uninstall -f $(VENV_NAME)
	@echo "🧹 Cleaned up all project state."

